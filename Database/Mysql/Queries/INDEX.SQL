-- 1. Clustered Index
-- ðŸ”¹ Stores data rows in a sorted order based on the index key (only one per table).
-- ðŸ”¹ The table itself is physically organized according to this index.

CREATE CLUSTERED INDEX IX_Employees_ID 
ON Employees(EmployeeID);
-- âœ… Best for: Tables with frequent range queries and sorting.







-- 2. Non-Clustered Index
-- ðŸ”¹ Creates a separate structure to store indexed data with a pointer to the actual data row.
-- ðŸ”¹ You can create multiple non-clustered indexes on a table.

CREATE NONCLUSTERED INDEX IX_Employees_Name 
ON Employees(LastName, FirstName);
-- âœ… Best for: Fast lookup of specific columns without reorganizing the table.








-- 3. Unique Index
-- ðŸ”¹ Ensures uniqueness of values in the indexed column(s).
-- ðŸ”¹ Automatically created with PRIMARY KEY and UNIQUE constraints.

CREATE UNIQUE INDEX IX_Employees_Email 
ON Employees(Email);
-- âœ… Best for: Enforcing uniqueness (e.g., Email, Username).








-- 4. Filtered Index
-- ðŸ”¹ Index with a WHERE clause to improve performance for specific queries.
-- ðŸ”¹ Reduces index size and improves query efficiency.

CREATE NONCLUSTERED INDEX IX_Orders_Active 
ON Orders(Status) WHERE Status = 'Active';
-- âœ… Best for: Indexing a subset of data.








-- 5. Columnstore Index
-- ðŸ”¹ Stores data in a compressed columnar format instead of rows.
-- ðŸ”¹ Optimized for large-scale analytics and reporting.

CREATE CLUSTERED COLUMNSTORE INDEX IX_Sales 
ON SalesData;
-- âœ… Best for: OLAP, large datasets, and analytical queries.







-- 7. Full-Text Index
-- ðŸ”¹ Supports full-text searches for large text-based data.
-- ðŸ”¹ Used for searching words, phrases, and linguistic variations.

CREATE FULLTEXT INDEX ON Products(ProductDescription)
KEY INDEX PK_Products;
-- âœ… Best for: Searching long text fields like product descriptions.